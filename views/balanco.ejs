<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <title>Balanço Geral – Studio Kadosh</title>
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <link
    href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"
    rel="stylesheet"
  >
  <!-- Chart.js e plugin de DataLabels -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2"></script>
</head>
<body class="bg-gray-100 min-h-screen flex flex-col">

  <!-- HEADER -->
  <header class="bg-white shadow-md">
    <div class="max-w-4xl mx-auto px-4 py-3 flex items-center justify-between">
      <h1 class="text-2xl font-bold text-purple-700">Studio Kadosh</h1>
      <nav class="hidden md:flex space-x-4">
        <a href="/dashboard"            class="text-gray-700 hover:text-gray-900">Dashboard</a>
        <a href="/agendamentos-por-dia" class="text-gray-700 hover:text-gray-900">Agendamentos</a>
        <a href="/clients"              class="text-gray-700 hover:text-gray-900">Clientes</a>
        <a href="/financeiro"           class="text-gray-700 hover:text-gray-900">Financeiro</a>
        <a href="/expenses"             class="text-gray-700 hover:text-gray-900">Despesas</a>
        <a href="/logout"               class="text-red-600 hover:text-red-800">Sair</a>
      </nav>
      <button id="menu-button" class="md:hidden p-2 rounded hover:bg-gray-200">
        <svg class="w-6 h-6 text-gray-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      </button>
    </div>
    <nav id="menu" class="hidden flex-col space-y-4 mb-4 px-4 md:hidden">
      <a href="/dashboard"            class="block bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700">🏠 Dashboard</a>
      <a href="/agendamentos-por-dia" class="block bg-blue-600   text-white px-4 py-2 rounded hover:bg-blue-700">📅 Agendamentos</a>
      <a href="/clients"              class="block bg-green-600  text-white px-4 py-2 rounded hover:bg-green-700">👥 Clientes</a>
      <a href="/financeiro"           class="block bg-yellow-500 text-white px-4 py-2 rounded hover:bg-yellow-600">💵 Financeiro</a>
      <a href="/expenses"             class="block bg-pink-600   text-white px-4 py-2 rounded hover:bg-pink-700">💸 Despesas</a>
      <a href="/logout"               class="block bg-red-600    text-white px-4 py-2 rounded hover:bg-red-700">⬅️ Sair</a>
    </nav>
  </header>
  <script>
    const btn  = document.getElementById('menu-button'),
          menu = document.getElementById('menu');
    btn.addEventListener('click', ()=> menu.classList.toggle('hidden'));
  </script>

  <main class="flex-grow max-w-4xl mx-auto p-4 space-y-6">

    <!-- CARDS RESUMO -->
    <section class="bg-white p-6 rounded shadow grid grid-cols-1 sm:grid-cols-3 gap-6 text-center">
      <div class="bg-green-50 p-4 rounded">
        <h2 class="text-lg font-medium">Total Receitas</h2>
        <p class="mt-2 text-2xl font-bold text-green-800">R$ <%= totalReceita.toFixed(2) %></p>
      </div>
      <div class="bg-red-50 p-4 rounded">
        <h2 class="text-lg font-medium">Total Despesas</h2>
        <p class="mt-2 text-2xl font-bold text-red-800">R$ <%= totalDespesa.toFixed(2) %></p>
      </div>
      <div class="<%= liquido >= 0 ? 'bg-blue-100' : 'bg-red-100' %> p-4 rounded">
        <h2 class="text-lg font-medium">Saldo Líquido</h2>
        <p class="mt-2 text-2xl font-bold <%= liquido >= 0 ? 'text-blue-800' : 'text-red-700' %>">
          R$ <%= liquido.toFixed(2) %>
        </p>
      </div>
    </section>

    <!-- GRÁFICOS -->
    <section class="grid grid-cols-1 lg:grid-cols-3 gap-6">
      <!-- 1) Receita vs Despesa -->
      <div class="bg-white p-6 rounded shadow">
        <h3 class="text-xl font-semibold mb-4">Receitas vs Despesas</h3>
        <canvas id="chartRevDesp"></canvas>
      </div>
      <!-- 2) Vendas por Produto -->
      <div class="bg-white p-6 rounded shadow">
        <h3 class="text-xl font-semibold mb-4">Vendas por Produto</h3>
        <canvas id="chartProd"></canvas>
      </div>
      <!-- 3) Qtd. Serviços vs Produtos -->
      <div class="bg-white p-6 rounded shadow">
        <h3 class="text-xl font-semibold mb-4">Qtd. Serviços vs Produtos</h3>
        <canvas id="chartCount"></canvas>
      </div>
    </section>

    <!-- FATURAMENTO MÊS A MÊS -->
    <section class="bg-white p-6 rounded shadow overflow-x-auto">
      <h3 class="text-xl font-semibold mb-4">Faturamento Mensal</h3>
      <table class="min-w-full text-left">
        <thead>
          <tr class="bg-gray-100">
            <th class="px-4 py-2">Mês</th>
            <th class="px-4 py-2">Total (R$)</th>
          </tr>
        </thead>
        <tbody>
          <% monthlyTotals.forEach(row => { %>
            <tr>
              <td class="border-t px-4 py-2"><%= row.month %></td>
              <td class="border-t px-4 py-2">R$ <%= row.total.toFixed(2) %></td>
            </tr>
          <% }) %>
        </tbody>
      </table>
    </section>

    <!-- DADOS PARA OS CHARTS -->
    <div id="balanco-data"
         data-receita="<%= totalReceita %>"
         data-despesa="<%= totalDespesa %>"
         data-produtos='<%- JSON.stringify(productTotals) %>'
         data-svc-count="<%= serviceCount %>"
         data-prd-count="<%= productCount %>"
         style="display:none">
    </div>

    <!-- INICIALIZAÇÃO DOS CHARTS -->
    <script>
      const ds = document.getElementById('balanco-data').dataset;
      const receita    = parseFloat(ds.receita);
      const despesa    = parseFloat(ds.despesa);
      const produtos   = JSON.parse(ds.produtos);
      const svcCount   = parseInt(ds.svcCount, 10);
      const prdCount   = parseInt(ds.prdCount, 10);

      // 1) Receita vs Despesa
      new Chart(
        document.getElementById('chartRevDesp').getContext('2d'),
        {
          type: 'pie',
          data: {
            labels: ['Receitas','Despesas'],
            datasets: [{ data: [ receita, despesa ] }]
          }
        }
      );

      // 2) Vendas por Produto
      const prodLabels = produtos.map(p => p.name);
      const prodData   = produtos.map(p => p.total);
      new Chart(
        document.getElementById('chartProd').getContext('2d'),
        {
          type: 'pie',
          data: {
            labels: prodLabels,
            datasets: [{ data: prodData }]
          }
        }
      );

      // 3) Qtd. Serviços vs Produtos com DataLabels
      new Chart(
        document.getElementById('chartCount').getContext('2d'),
        {
          type: 'pie',
          data: {
            labels: ['Serviços','Produtos'],
            datasets: [{
              data: [ svcCount, prdCount ],
              backgroundColor: ['#34D399','#60A5FA']
            }]
          },
          options: {
            plugins: {
              datalabels: {
                color: '#fff',
                formatter: v => v,
                font: { weight:'bold', size:14 }
              },
              legend: {
                position: 'bottom'
              }
            }
          },
          plugins: [ ChartDataLabels ]
        }
      );
    </script>

  </main>
</body>
</html>
